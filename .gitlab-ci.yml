image: docker:git
services:
  - docker:dind

stages:
  - build
  - release

variables:
  REGISTRY_ENDPOINT: registry-special.tenforce.com
  REGISTRY_IMAGE: registry-special.tenforce.com/special/compliance-checker
  CONTAINER_TEST_IMAGE: ${REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  CONTAINER_RELEASE_IMAGE: ${REGISTRY_IMAGE}:latest
  CONTAINER_TAG_IMAGE: ${REGISTRY_IMAGE}:${CI_COMMIT_TAG}

before_script:
  - docker login -u ${REGISTRY_USERNAME} -p ${REGISTRY_PASSWORD} ${REGISTRY_ENDPOINT}

build:
  stage: build
  script:
    - docker pull "${CONTAINER_RELEASE_IMAGE}"
    - docker build --cache-from "${CONTAINER_RELEASE_IMAGE}" -t ${CONTAINER_TEST_IMAGE} .
    - docker push ${CONTAINER_TEST_IMAGE}

release:
  stage: release
  script:
    - docker pull ${CONTAINER_TEST_IMAGE}
    - target_image=$([ "${CI_COMMIT_REF_NAME}" = "master" ] && echo "${CONTAINER_RELEASE_IMAGE}" || echo "${CONTAINER_TAG_IMAGE}")
    - docker tag ${CONTAINER_TEST_IMAGE} "${target_image}"
    - docker push "${target_image}"
  only:
    - master
    - tags

publish-vienna:
  stage: release
  variables:
    GIT_STRATEGY: clone
  script:
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | ssh-add /dev/stdin
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git push ${VIENNA_REMOTE} master
  only:
    - master
